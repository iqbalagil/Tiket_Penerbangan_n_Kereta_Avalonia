// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tiket_Penerbangan_n_Kereta.Data;

#nullable disable

namespace Tiket_Penerbangan_n_Kereta.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250212005454_newsTable")]
    partial class newsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("Tiket_Penerbangan_n_Kereta.ViewModel.Data.Pemesanan", b =>
                {
                    b.Property<int>("IdPemesanan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdRute")
                        .HasColumnType("INTEGER");

                    b.Property<string>("KodeKursi")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("KodePemesanan")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TanggalBerangkat")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TanggalPemesanan")
                        .HasColumnType("TEXT");

                    b.Property<string>("TempatPemesanan")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalBayar")
                        .HasColumnType("TEXT");

                    b.Property<int>("idPenumpang")
                        .HasColumnType("INTEGER");

                    b.Property<int>("idPetugas")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPemesanan");

                    b.ToTable("Pemesanan");
                });

            modelBuilder.Entity("Tiket_Penerbangan_n_Kereta.ViewModel.Data.Penumpang", b =>
                {
                    b.Property<int>("IdPenumpang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlamatPenumpang")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("JenisKelamin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NoTelepon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TanggalLahir")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdPenumpang");

                    b.ToTable("Penumpang");
                });

            modelBuilder.Entity("Tiket_Penerbangan_n_Kereta.ViewModel.Data.Petugas", b =>
                {
                    b.Property<int>("idPetugas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Roles")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("idRole")
                        .HasColumnType("INTEGER");

                    b.HasKey("idPetugas");

                    b.ToTable("Petugas");
                });

            modelBuilder.Entity("Tiket_Penerbangan_n_Kereta.ViewModel.Data.Rute", b =>
                {
                    b.Property<int>("IdRute")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdTransportasi")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PemesananIdPemesanan")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RuteAkhri")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RuteAwal")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tujuan")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdRute");

                    b.HasIndex("PemesananIdPemesanan");

                    b.ToTable("Rute");
                });

            modelBuilder.Entity("Tiket_Penerbangan_n_Kereta.ViewModel.Data.Transportasi", b =>
                {
                    b.Property<int>("IdTransportasi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdTypeTransportasi")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Imagedata")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<int>("JumlahKursi")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Active");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NamaType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdTransportasi");

                    b.HasIndex("IdTypeTransportasi");

                    b.ToTable("Transportasi");
                });

            modelBuilder.Entity("Tiket_Penerbangan_n_Kereta.ViewModel.Data.TypeTransportasi", b =>
                {
                    b.Property<int>("IdTypeTransportasi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NamaType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdTypeTransportasi");

                    b.ToTable("TypeTransportasi");
                });

            modelBuilder.Entity("Tiket_Penerbangan_n_Kereta.ViewModel.Data.Rute", b =>
                {
                    b.HasOne("Tiket_Penerbangan_n_Kereta.ViewModel.Data.Pemesanan", null)
                        .WithMany("Tujuan")
                        .HasForeignKey("PemesananIdPemesanan");
                });

            modelBuilder.Entity("Tiket_Penerbangan_n_Kereta.ViewModel.Data.Transportasi", b =>
                {
                    b.HasOne("Tiket_Penerbangan_n_Kereta.ViewModel.Data.TypeTransportasi", "TypeTransportasi")
                        .WithMany("Transports")
                        .HasForeignKey("IdTypeTransportasi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeTransportasi");
                });

            modelBuilder.Entity("Tiket_Penerbangan_n_Kereta.ViewModel.Data.Pemesanan", b =>
                {
                    b.Navigation("Tujuan");
                });

            modelBuilder.Entity("Tiket_Penerbangan_n_Kereta.ViewModel.Data.TypeTransportasi", b =>
                {
                    b.Navigation("Transports");
                });
#pragma warning restore 612, 618
        }
    }
}
